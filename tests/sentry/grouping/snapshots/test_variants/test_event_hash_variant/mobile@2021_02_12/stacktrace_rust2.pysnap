---
created: '2021-03-18T10:37:56.253845Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app-depth-1:
  hash: "3a6e41ac29b05b3745783c0a4fc6b493"
  tree_label: "log_demo::main"
  component:
    app-depth-1*
      exception*
        stacktrace*
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
app-depth-2:
  hash: "cf2e217f9a96e8d6d5b02948d03b3777"
  tree_label: "std::rt::lang_start::{{closure}} | ..."
  component:
    app-depth-2*
      exception*
        stacktrace*
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
app-depth-3:
  hash: "373856b1c55212a75148583dc47bb567"
  tree_label: "std::panicking::try::do_call | std::rt::lang_start::{{closure}} | ..."
  component:
    app-depth-3*
      exception*
        stacktrace*
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::panicking::try::do_call"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
app-depth-4:
  hash: "e2c887dcc42359579d7d6842f3c3284c"
  tree_label: "std::rt::lang_start_internal | std::panicking::try::do_call | std::rt::lang_start::{{closure}} | ..."
  component:
    app-depth-4*
      exception*
        stacktrace*
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start_internal"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::panicking::try::do_call"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
app-depth-5:
  hash: "9b33b65a645c66239cafcd276fcd0659"
  tree_label: "_main | std::rt::lang_start_internal | std::panicking::try::do_call | std::rt::lang_start::{{closure}} | ..."
  component:
    app-depth-5*
      exception*
        stacktrace*
          frame*
            function*
              "_main"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start_internal"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::panicking::try::do_call"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
app-depth-max:
  hash: "9b33b65a645c66239cafcd276fcd0659"
  tree_label: "<entire stacktrace>"
  component:
    app-depth-max*
      exception*
        stacktrace*
          frame*
            function*
              "_main"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start_internal"
            package (ignored because function takes precedence)
              "std"
          frame (ignored by stack trace rule (family:native function:__* -group))
            function*
              "___rust_maybe_catch_panic"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::panicking::try::do_call"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
          frame (ignored by stack trace rule (family:native function:*::__* -group))
            function*
              "log::__private_api_log"
            package (ignored because function takes precedence)
              "log"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
--------------------------------------------------------------------------
exception-type:
  hash: "fed4f6eb500e04f59e97d31e8743ec8f"
  tree_label: "log_demo"
  component:
    exception-type*
      exception-type*
        type*
          "log_demo"
--------------------------------------------------------------------------
system:
  hash: "9b33b65a645c66239cafcd276fcd0659"
  tree_label: "<entire stacktrace>"
  component:
    system*
      exception*
        stacktrace*
          frame*
            function*
              "_main"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start_internal"
            package (ignored because function takes precedence)
              "std"
          frame (ignored by stack trace rule (family:native function:__* -group))
            function*
              "___rust_maybe_catch_panic"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::panicking::try::do_call"
            package (ignored because function takes precedence)
              "std"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            function*
              "std::rt::lang_start::{{closure}}"
            package (ignored because function takes precedence)
              "std"
          frame* (marked in-app by stack trace rule (family:native function:log_demo::* +app))
            function*
              "log_demo::main"
            package (ignored because function takes precedence)
              "log_demo"
          frame (ignored by stack trace rule (family:native function:*::__* -group))
            function*
              "log::__private_api_log"
            package (ignored because function takes precedence)
              "log"
        type*
          "log_demo"
        value (ignored because stacktrace takes precedence)
          "Holy shit everything is on fire!"
