---
created: '2021-03-25T16:01:46.259292Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  component:
    app (exception of system takes precedence)
      exception (ignored because this variant does not have a contributing stacktrace, but the system variant does)
        stacktrace
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "start"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function*
              "-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"
          frame (non app frame)
            function*
              "CFRunLoopRunSpecific"
          frame (non app frame)
            function*
              "__CFRunLoopRun"
          frame (non app frame)
            function*
              "__CFRunLoopDoSources0"
          frame (non app frame)
            function*
              "__CFRunLoopDoSource0"
          frame (non app frame)
            function*
              "__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (non app frame)
            function* (isolated function)
              "code"
          frame (marked as sentinel frame by stack trace rule (category:gl +sentinel))
            function*
              "glTexSubImage2D"
          frame (marked as sentinel frame by stack trace rule (category:gl +sentinel))
            function*
              "glTexSubImage2D_Exec"
          frame (marked as sentinel frame by stack trace rule (category:gl +sentinel))
            function*
              "gleTextureImagePut"
          frame (marked as prefix frame by stack trace rule (category:driver +sentinel +prefix))
          frame (marked as prefix frame by stack trace rule (category:driver +sentinel +prefix))
            function*
              "gpusSubmitDataBuffers"
          frame (marked as prefix frame by stack trace rule (category:driver +sentinel +prefix))
          frame (non app frame)
            function*
              "gpusGenerateCrashLog"
          frame (non app frame)
            function*
              "gpusGenerateCrashLog.cold.1"
          frame (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "abort"
          frame (marked out of app by stack trace rule (family:native package:/usr/lib/** -app))
            function*
              "__pthread_kill"
        type (ignored because exception is synthetic)
          "0x00000000 / 0x00000000"
--------------------------------------------------------------------------
system:
  hash: "a11f01f76654146ae91693bc0796dd34"
  component:
    system*
      exception*
        stacktrace*
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            function*
              "start"
          frame*
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame*
            function*
              "-[NSRunLoop(NSRunLoop) runMode:beforeDate:]"
          frame*
            function*
              "CFRunLoopRunSpecific"
          frame*
            function*
              "__CFRunLoopRun"
          frame*
            function*
              "__CFRunLoopDoSources0"
          frame*
            function*
              "__CFRunLoopDoSource0"
          frame*
            function*
              "__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__"
          frame*
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame (ignored due to recursion)
            function* (isolated function)
              "code"
          frame* (marked as sentinel frame by stack trace rule (category:gl +sentinel))
            function*
              "glTexSubImage2D"
          frame (ignored by stack trace rule ([ .. | category:gl] category:gl -group))
            function*
              "glTexSubImage2D_Exec"
          frame (ignored by stack trace rule ([ .. | category:gl] category:gl -group))
            function*
              "gleTextureImagePut"
          frame (marked as prefix frame by stack trace rule (category:driver +sentinel +prefix))
          frame (ignored by stack trace rule ([ category:driver | .. ] category:driver -group))
            function*
              "gpusSubmitDataBuffers"
          frame (marked as prefix frame by stack trace rule (category:driver +sentinel +prefix))
          frame (ignored by stack trace rule (category:telemetry -group))
            function*
              "gpusGenerateCrashLog"
          frame (ignored by stack trace rule (category:telemetry -group))
            function*
              "gpusGenerateCrashLog.cold.1"
          frame* (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "abort"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            function*
              "__pthread_kill"
        type (ignored because exception is synthetic)
          "0x00000000 / 0x00000000"
